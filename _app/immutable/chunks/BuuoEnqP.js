import"./CWj6FrbW.js";import{S as s,D as u}from"./CJQ8bSi3.js";import{u as c,x as h,n as p}from"./ChQ8i3mT.js";import{t as f,a as m}from"./CwLvwI_u.js";import{b as d}from"./5rUHwaZ0.js";var b=f('<li><a href="/learn">Introduction</a> <ul><li><a href="/learn#what-is-cabin">What is Cabin?</a></li> <li><a href="/learn#navigating-these-docs">Navigating These Docs</a></li> <li><a href="/learn#additional-support">Additional Support</a></li> <li><a href="/learn#final-remarks">Final Remarks</a></li></ul></li> <li><a href="/learn/installation">Installation</a> <ul><li><a href="/learn/installation#testing">Testing</a></li> <li><a href="/learn/installation#editor-setup">Editor Setup</a></li> <li><a href="/learn/installation#troubleshooting">Troubleshooting</a></li></ul></li> <li><a href="/learn/declarations">Declarations</a> <ul><li><a href="/learn/declarations#mutability">Mutability</a></li> <li><a href="/learn/declarations#visibility">Visibility</a></li></ul></li> <li><a href="/learn/basic-types-and-operations">Basic Types &amp; Operations</a> <ul><li><a href="/learn/basic-types-and-operations#basic-types">Basic Types</a> <ul><li><a href="/learn/basic-types-and-operations#boolean-combinators">Text</a></li> <li><a href="/learn/basic-types-and-operations#numbers">Numeric Types</a></li> <li><a href="/learn/basic-types-and-operations#boolean">Boolean</a></li></ul></li> <li><a href="/learn/basic-types-and-operations#basic-operations">Basic Operations</a> <ul><li><a href="/learn/basic-types-and-operations#boolean-combinators">Boolean Combinators</a></li> <li><a href="/learn/basic-types-and-operations#double-colon">The Double-Colon Operator</a></li> <li><a href="/learn/basic-types-and-operations#dot">The Dot Operator</a></li></ul></li></ul></li> <li><a href="/learn/system-interaction">System Interaction</a> <ul><li><a href="/learn/system-interaction#terminal-input-output">Terminal Input &amp; Output</a></li> <li><a href="/learn/system-interaction#file-input-output">File Input &amp; Output</a></li> <li><a href="/learn/system-interaction#other-system-interactions">Other System Interactions</a></li></ul></li> <li><a href="/learn/compile-time-evaluation">Compile-Time Evaluation</a> <ul><li><a href="/learn/compile-time-evaluation#compile-time-vs-runtime">Compile-Time vs Run-Time</a></li> <li><a href="/learn/compile-time-evaluation#compile-time-as-the-default">Compile-Time as the Default</a></li> <li><a href="/learn/compile-time-evaluation#runtime-evaluation">Runtime Evaluation</a></li></ul></li> <li><a href="/learn/if-expressions">If Expressions</a> <ul><li><a href="/learn/if-expressions#otherwise"><code>otherwise</code> Blocks</a></li> <li><a href="/learn/if-expressions#expressions"><code>if</code> as Expressions</a></li></ul></li> <li><a href="/learn/loops">Loops</a> <ul><li><a href="/learn/loops#foreach"><code>foreach</code> Loops</a></li> <li><a href="/learn/loops#while"><code>while</code> Loops</a></li> <li><a href="/learn/loops#expressions">Loops as Expressions</a></li></ul></li> <li><a href="/learn/control-flow">Control Flow</a> <ul><li><a href="/learn/control-flow#labels">Labels & <code>is</code> Statements</a></li> <li><a href="/learn/control-flow#reserved-labels">Reserved labels</a> <ul><li><a href="/learn/control-flow#it">The <code>it</code> Label</a></li> <li><a href="/learn/control-flow#return">The <code>return</code> Label</a></li> <li><a href="/learn/control-flow#loop">The <code>loop</code> Label</a></li> <li><a href="/learn/control-flow#done">The <code>done</code> Value</a></li> <li><a href="/learn/control-flow#iteration">The <code>iteration</code> Label</a></li></ul></li></ul></li> <li><a href="/learn/groups">Groups</a> <ul><li><a href="/learn/groups#introduction">Introduction</a></li> <li><a href="/learn/groups#nominality">Nominality</a></li> <li><a href="/learn/groups#mutability">Mutability</a></li> <li><a href="/learn/groups#visibility">Visibility</a></li> <li><a href="/learn/groups#compile-time-parameters">Compile-Time Parameters</a></li></ul></li> <li><a href="/learn/actions">Actions</a> <ul><li><a href="/learn/actions#return-values">Return Values</a></li> <li><a href="/learn/actions#parameters">Parameters</a></li> <li><a href="/learn/actions#compile-time-parameters">Compile-Time Parameters</a></li></ul></li> <li><a href="/learn/eithers">Eithers</a> <ul><li><a href="/learn/eithers#basic">Basic Eithers</a></li> <li><a href="/learn/eithers#subtypes">Subtypes</a></li></ul></li> <li><a href="/learn/pattern-matching">Pattern Matching</a> <ul><li><a href="/learn/pattern-matching#is-variant">The <code>is_variant</code> Action</a></li> <li><a href="/learn/pattern-matching#conditional-let-bindings">Conditonal <code>let</code> Bindings</a></li> <li><a href="/learn/pattern-matching#match-blocks"><code>match</code> Blocks</a></li></ul></li> <li><a href="/learn/runtime-evaluation">Runtime Evaluation</a> <ul><li><a href="/learn/runtime-evaluation#run-expressions"><code>run</code> expressions</a></li> <li><a href="/learn/runtime-evaluation#runtime-evaluation-tree">The Runtime-Evaluation Tree</a></li> <li><a href="/learn/runtime-evaluation#command-line-arguments">Command-Line Arguments</a></li></ul></li> <li><a href="/learn/extensions">Extensions</a> <ul><li><a href="/learn/extensions#basic-extensions">Basic extensions</a></li> <li><a href="/learn/extensions#polymorphic-extensions">Polymorphic extensions</a></li> <li><a href="/learn/extensions#operator-overloading">Operator Overloading</a></li> <li><a href="/learn/extensions#default-extensions">Default Extensions</a></li> <li><a href="/learn/extensions#getters">Extension Getters</a></li></ul></li> <li><a href="/learn/tags">Tags</a> <ul><li><a href="/learn/tags#introduction">Introduction</a></li> <li><a href="/learn/tags#mutation">Mutation</a></li></ul></li> <li><a href="/learn/optionals-and-errors">Optionals &amp; Errors</a> <ul><li>The <code>Optional</code> either</li> <li>The <code>Attempt</code> either</li> <li>The <code>?</code> and <code>!</code> operators</li></ul></li> <li><a href="/learn/external-libraries">External Libraries</a></li> <li><a href="/learn/conclusion">Conclusion</a></li>',1);function g(i,e){c(e,!0);let a;function r(){return a.next()}function n(){return a.previous()}function t(){return a.toggle()}return d(s(i,{get page(){return e.page},children:(l,y)=>{var o=b();p(36),m(l,o)},$$slots:{default:!0}}),l=>a=l,()=>a),h({next:r,previous:n,toggle:t})}function C(i,e){u(i,{get page(){return e.page},get children(){return e.children},Sidebar:g})}export{C as T};
