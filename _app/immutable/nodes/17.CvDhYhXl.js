import"../chunks/CWj6FrbW.js";import{a3 as se,s as e,a1 as s,a2 as i,u as ma,x as fa,$ as _a,f as X,J as w,aa as ee,ap as Ne,ag as ae,n}from"../chunks/ChQ8i3mT.js";import{n as Ge,a as l,f as ya,t as $,e as p}from"../chunks/CwLvwI_u.js";import{h as wa}from"../chunks/3l18Sfkq.js";import{r as De,i as te,a as re}from"../chunks/DTE6UjiL.js";import{a as ze,s as _}from"../chunks/BBBwdkJ2.js";import{s as r}from"../chunks/B9cGN4M3.js";import{o as $a}from"../chunks/BpABP35b.js";import{S as v}from"../chunks/DCmLAtqY.js";import{N as xa}from"../chunks/BajXayOH.js";import{T as Ca}from"../chunks/BuuoEnqP.js";import{P as oe}from"../chunks/CBUcF-bI.js";import{E as d}from"../chunks/wSrTGpqF.js";var ka=Ge('<svg><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><g><path d="M330.396,282.031L178.487,35.471c-2.504-4.074-6.96-6.555-11.736-6.555c-4.795,0-9.235,2.48-11.751,6.555L2.051,283.712 c-2.624,4.251-2.735,9.602-0.306,13.961c2.441,4.371,7.046,7.073,12.058,7.073h305.881c0.055-0.018,0.114-0.018,0.181,0 c7.62,0,13.799-6.19,13.799-13.799C333.669,287.543,332.438,284.445,330.396,282.031z M157.692,111.062h18.104v109.96h-18.104 V111.062z M175.695,261.243c-2.66,2.498-5.647,3.759-8.956,3.759c-3.303,0-6.285-1.261-8.948-3.759 c-2.651-2.534-3.978-5.579-3.978-9.182c0-3.585,1.261-6.629,3.774-9.157c2.504-2.511,5.554-3.771,9.152-3.771 c3.584,0,6.656,1.261,9.172,3.771c2.504,2.528,3.771,5.572,3.771,9.157C179.683,255.664,178.337,258.708,175.695,261.243z"></path></g></g></svg>');function Pa(k,f){let x=De(f,["$$slots","$$events","$$legacy","stroke"]);var g=ka();let m;se(()=>m=ze(g,m,{...x,fill:f.stroke,version:"1.1",id:"Capa_1",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 333.663 333.663","xml:space":"preserve"},void 0,!0)),l(k,g)}var Ta=Ge('<svg><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M14.5 19.5H9.5M14.5 19.5C14.5 18.7865 14.5 18.4297 14.5381 18.193C14.6609 17.4296 14.6824 17.3815 15.1692 16.7807C15.3201 16.5945 15.8805 16.0927 17.0012 15.0892C18.5349 13.7159 19.5 11.7206 19.5 9.5C19.5 8.62341 19.3496 7.78195 19.0732 7M14.5 19.5C14.5 20.4346 14.5 20.9019 14.299 21.25C14.1674 21.478 13.978 21.6674 13.75 21.799C13.4019 22 12.9346 22 12 22C11.0654 22 10.5981 22 10.25 21.799C10.022 21.6674 9.83261 21.478 9.70096 21.25C9.5 20.9019 9.5 20.4346 9.5 19.5M9.5 19.5C9.5 18.7865 9.5 18.4297 9.46192 18.193C9.3391 17.4296 9.31762 17.3815 8.83082 16.7807C8.67987 16.5945 8.11945 16.0927 6.99876 15.0892C5.4651 13.7159 4.5 11.7206 4.5 9.5C4.5 5.35786 7.85786 2 12 2C13.3637 2 14.6423 2.36394 15.7442 3" stroke-width="1.5" stroke-linecap="round"></path><path d="M12.7857 8.5L10.6428 11.5H13.6428L11.5 14.5" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></g></svg>');function Ia(k,f){let x=De(f,["$$slots","$$events","$$legacy","stroke"]);var g=Ta();let m;var C=e(s(g),2),b=s(C),P=e(b);i(C),i(g),se(()=>{m=ze(g,m,{...x,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},void 0,!0),_(b,"stroke",f.stroke),_(P,"stroke",f.stroke)}),l(k,g)}function Ue(k,f){xa(k,{Icon:Ia,get children(){return f.children},type:"Tip",color:"#89dceb",color2:"#89b4fa"})}const Sa=""+new URL("../assets/windows.DRwY9kpx.png",import.meta.url).href,Ra=""+new URL("../assets/mac.LENrtIPb.png",import.meta.url).href,Ma=""+new URL("../assets/linux.UfK4sZQY.png",import.meta.url).href,La=""+new URL("../assets/visual_studio_code.Be83qqBg.png",import.meta.url).href,Va=""+new URL("../assets/neovim.xdbsRCpn.png",import.meta.url).href,ja=""+new URL("../assets/vim.Q396DNj2.png",import.meta.url).href,Aa=""+new URL("../assets/zed.C-EANG1l.png",import.meta.url).href,Ha=""+new URL("../assets/unknown.CcoluJVG.png",import.meta.url).href;var Oa=$("<pre><span>cargo</span> <span>install</span> <span>cabin-language</span></pre>"),Na=$("Don't have cargo? Install Rust with <!>",1),Ua=$("<pre><span>cabin</span></pre>"),Ga=$(`<pre>The Cabin compiler.

<b>Usage:</b> <span>cabin</span> <span>&lt;COMMAND&gt;</span> <span>[ARGUMENTS]</span> <span>[OPTIONS]</span>

<b>Commands:</b>
    <span>new</span>            Create a new Cabin project
    <span>run</span>            Run a Cabin project 
    <span>build</span>          Build a Cabin project into a native executable without running it
    <span>check</span>          Check a Cabin project for compile-time errors without building it
    <span>format</span>         Format a Cabin file or project
    <span>test</span>           Run tests in a Cabin project
    <span>set</span>            Configure a compiler flag
    <span>add</span>            Add an external library
    <span>remove</span>         Remove an external library
    <span>publish</span>        Publish a Cabin library

<b>Options: </b>
    <span>-h, --help</span>     Print help
</pre>`),Da=$(`<pre>Checks for diagnostics in a Cabin project.

<b>Usage:</b> <span>cabin check</span> <span>[OPTIONS]</span>

<b>Options:</b>

    <span>--format</span>: "readable" | "json" = "readable"

        The output format for the diagnostics. If the value is set to "readable" the outputs will 
        be pretty-printed with a code snippet showing the location of the diagnostic. If the value
        set to "json", a JSON array of diagnostics will be returned with the structure:

        &lbrace; diagnostics: &lbrace; file: string, line: int, column: int, message: string, severity: string &rbrace;[] &rbrace;

        For example, an example output is:

        &lbrace;"diagnostics":[&lbrace;"file":"/home/jazz/projects/example/src/main.cabin","line":10,"column":4,"message":"Type Mismatch: This value cannot be assigned to this type.","severity","error"&rbrace;]&rbrace;

        "severity" will always be either "error", "warning", "info", or "hint".
		</pre>`),za=$("Requires <!> (present on most Unix systems by default)",1),Ea=$("<pre><span>cargo</span> <span>install</span> <span>cabin-language</span></pre>"),qa=$(`<pre><span>git</span> <span>clone</span> <span>https://github.com/cabin-language/cabin.git</span>
<span>cd</span> <span>cabin/crates/cabin-bin</span>
<span>cargo</span> <span>build</span> <span>--release</span></pre>`),Ba=$(`<h1>Installation</h1> <div class="os-buttons svelte-50baxh"><button class="svelte-50baxh"><img alt="Windows" class="svelte-50baxh"> <!></button> <button class="svelte-50baxh"><img alt="MacOS" class="svelte-50baxh"> <!></button> <button class="svelte-50baxh"><img alt="Linux" class="svelte-50baxh"> <!></button></div> <p>Cabin can be installed through <code>cargo</code> :</p> <!> <!> <h2 id="testing">Testing</h2> <p>Once Cabin is installed, you can test that it's working with the <code>cabin</code> command:</p> <!> <p>If all goes well, you should see an output like this:</p> <!> <p>If you got an error instead, refer to the bottom of this page for troubleshooting tips.
		Otherwise, continue on to the documentation!</p> <h2 id="editor-setup">Editor Setup</h2> <p>Cabin is supported in many popular text editors with extensions and plugins. Choose your editor
		below to get set up.</p> <h2 class="editor svelte-50baxh"><img alt="Visual Studio Code" class="svelte-50baxh"> Visual Studio Code</h2> <div class="svelte-50baxh"><!> <p>To use Cabin in Visual Studio Code, install <!> from <!> .</p></div> <h2 class="editor svelte-50baxh"><img alt="Vim" class="svelte-50baxh"> Vim</h2> <div class="svelte-50baxh"><!> <p>To use Cabin in Vim, install <a href="https://github.com/cabin-language/vim-cabin" class="svelte-50baxh">the Cabin Vim plugin.</a></p> <h3>ðŸ”Œ Vim-Plug</h3> <!> <h3>ðŸ“¦ Vundle</h3> <!></div> <h2 class="editor svelte-50baxh"><img alt="Neovim" class="svelte-50baxh"> Neovim</h2> <div class="svelte-50baxh"><p>Currently, the best support for Cabin in Neovim is provided through the <!> plugin. The plugin will automatically set up filetype detection, nerd font icons, install and set
			up the <!> , as well as the <!> for semantic highlighting.</p> <h3>Installation</h3> <b>ðŸ’¤ lazy.nvim</b> <!> <b>ðŸ”¹mini.deps</b> <!> <h3><!> Future Deprecation Warning</h3> <p>This plugin may be deprecated in the future if the following criteria are met:</p> <ul><li class="svelte-50baxh"><input type="checkbox" disabled> Cabin is registered as a <!></li> <li class="svelte-50baxh"><input type="checkbox" disabled> Cabin has an icon registered in <!></li> <li class="svelte-50baxh"><input type="checkbox" disabled> The <!> is available through <!></li> <li class="svelte-50baxh"><input type="checkbox" disabled> The <!> is available through <!></li></ul></div> <h2 class="editor svelte-50baxh"><img alt="Zed" class="svelte-50baxh"> Zed</h2> <div class="svelte-50baxh"><!></div> <h2 class="editor svelte-50baxh"><img alt="Other" class="svelte-50baxh"> Other</h2> <div class="svelte-50baxh"><p>If you're using an editor that isn't listed here, you can use the tools Cabin provides with
			your editor-specific setup.</p> <h3>Highlighting</h3> <p>Cabin offers a number of highlighting solutions depending on what your editor supports:</p> <ul><li class="svelte-50baxh"><b>Tree-Sitter:</b> The Cabin Tree-Sitter grammar and parser, along with its accompanying highlight queries, can
				be used to highlight code in an editor that supports Tree-Sitter highlighting.</li> <li class="svelte-50baxh"><b>TextMate:</b> There also exists a Cabin TextMate grammar that can be used by editors that utilize TextMate
				grammars for syntax highlighting.</li></ul> <h3>Diagnostics</h3> <p>There are multiple ways to get live diagnostics for your Cabin code in real-time in an editor:</p> <ul><li class="svelte-50baxh"><b>Language Server Protocol:</b> Cabin has a language server that provides a server-side implementation of Microsoft's language
				server protocol. Many editors use this as a unified way to communicate with languages about diagnostics,
				among other features.</li> <li class="svelte-50baxh"><b>Compiler Invocation:</b> The Cabin compiler can check a program and output diagnostics in a number of formats; If you
				can invoke the compiler and parse the result from your editor, you can convert them into your
				editor-specific diagnostic format:</li></ul> <!></div> <h2 id="troubleshooting">Troubleshooting</h2> <p>So you got an error&mdash;Oh no! It's not your fault, and these cases are rare, but occasionally
		bugs in build scripts or installation scripts slip through the cracks. Let's work through it.</p> <p>If running <code>cabin</code> gives an error, make sure that the installation location is in your <code>PATH</code> environment variable. The following bash code will print the location of the Cabin executable on
		your system if it exists, and if it doesn't, will let you know*:</p> <!> <!> <p class="note svelte-50baxh"></p> <p>If you get an error here, it means that the Cabin compiler either doesn't exist on your
		computer, or it does but it's in a location somewhere that isnt in your <code>PATH</code> variable. If you know that you have the compiler and where it is (it'll just be a file called <code>cabin</code> ), then add its parent directory to your <code>PATH</code> ; i.e., if your Cabin compiler is located at <code>/home/user/.programs/cabin</code> , then in your <code>~/.bashrc</code> , you'd add:</p> <!> <p>Alternatively, if you're not sure whether the compiler is on your system, or you think it might
		be but you don't know where, consider trying the installation for your operating system above.
		Make sure the operating system selected matches your machine; The website will try to
		auto-detect it, but it doesn't hurt to double check, especially when it comes to Linux distros.</p> <p>If you're <i>still</i> having trouble with your installation, fear not! Two more options remain. For both, you need to have
		Rust installed. Check if Rust is installed by running <code>cargo</code> , and if it's not, install it with the instructions <a href="https://www.rust-lang.org/tools/install" class="svelte-50baxh">here</a> .</p> <p>The first option is to install the compiler through it's cargo crate. This may have already been
		the instructions for your operating system if no native solution exists. If not, you can try it
		like so:</p> <!> <p>If that's causing you trouble, the last thing you can try is building the compiler from source.
		That'd look something like this:</p> <!> <p>The compiler executable will be placed at <code>cabin/crates/cabin-bin/target/release/cabin</code> when the project finishes compiling. Place the file anywhere in your <code>PATH</code> , using the <code>PATH</code> instructions and debugging tips above if necessary.</p> <p>If you've gotten this far and are <i>still</i> having trouble getting the compiler working on your machine, first of all, congratulations for being
		the most incredibly unlucky person alive, and secondly, feel free to reach out to the Cabin community
		to get advice on your situation. You can <!> , ask questions in <a href="/community" class="svelte-50baxh">the Cabin Discord server</a> , or <a href="/community" class="svelte-50baxh">reach out to the community in other ways</a> . Try to be descriptive about what you've tried that hasn't worked, what error messages (if any)
		you've received, and what you're confused on or struggling with.</p>`,1);function st(k,f){ma(f,!0);let x=Ne("windows");function g(b){return function(){ee(x,re(b))}}let m=Ne(!0);$a(()=>{let b=matchMedia("(min-width: 800px");ee(m,re(b.matches)),b.addEventListener("change",P=>ee(m,re(P.matches)))});function C(b){let T=b.target.nextElementSibling.style;T.display=T.display==="flex"?"none":"flex"}wa(b=>{_a.title="Installation â€¢ Cabin Docs"}),Ca(k,{page:"Installation",children:(b,P)=>{var T=Ba(),G=e(X(T),2),I=s(G),Ee=ae(()=>g("windows"));I.__click=function(...a){var o;(o=w(Ee))==null||o.apply(this,a)};var ie=s(I);_(ie,"src",Sa);var qe=e(ie,2);{var Be=a=>{var o=p("Windows");l(a,o)};te(qe,a=>{w(m)&&a(Be)})}i(I);var S=e(I,2),Fe=ae(()=>g("mac"));S.__click=function(...a){var o;(o=w(Fe))==null||o.apply(this,a)};var ne=s(S);_(ne,"src",Ra);var We=e(ne,2);{var Je=a=>{var o=p("Mac");l(a,o)};te(We,a=>{w(m)&&a(Je)})}i(S);var V=e(S,2),Ye=ae(()=>g("linux"));V.__click=function(...a){var o;(o=w(Ye))==null||o.apply(this,a)};var le=s(V);_(le,"src",Ma);var Ze=e(le,2);{var Qe=a=>{var o=p("Linux");l(a,o)};te(Ze,a=>{w(m)&&a(Qe)})}i(V),i(G);var ce=e(G,4);v(ce,{copyable:!0,children:(a,o)=>{var t=Oa(),c=s(t);r(c,"color","#89b4fa");var h=e(c,2);r(h,"color","#89b4fa");var u=e(h,2);r(u,"color","#f38ba8"),i(t),l(a,t)},$$slots:{default:!0}});var pe=e(ce,2);Ue(pe,{children:(a,o)=>{n();var t=Na(),c=e(X(t));d(c,{href:"https://www.rust-lang.org/tools/install",color:"#11111b",children:(h,u)=>{n();var y=p("the instructions on the official Rust website");l(h,y)},$$slots:{default:!0}}),l(a,t)}});var he=e(pe,6);v(he,{copyable:!0,children:(a,o)=>{var t=Ua(),c=s(t);r(c,"color","#89b4fa"),i(t),l(a,t)},$$slots:{default:!0}});var ue=e(he,4);v(ue,{children:(a,o)=>{var t=Ga(),c=e(s(t),3);r(c,"color","#89b4fa");var h=e(c,2);r(h,"color","#89b4fa");var u=e(h,2);r(u,"color","#f38ba8");var y=e(u,2);r(y,"color","#9399b2");var R=e(y,4);r(R,"color","#89b4fa");var M=e(R,2);r(M,"color","#89b4fa");var L=e(M,2);r(L,"color","#89b4fa");var U=e(L,2);r(U,"color","#89b4fa");var Le=e(U,2);r(Le,"color","#89b4fa");var Ve=e(Le,2);r(Ve,"color","#89b4fa");var je=e(Ve,2);r(je,"color","#89b4fa");var Ae=e(je,2);r(Ae,"color","#89b4fa");var He=e(Ae,2);r(He,"color","#89b4fa");var Oe=e(He,2);r(Oe,"color","#89b4fa");var ga=e(Oe,4);r(ga,"color","#9399b2"),n(),i(t),l(a,t)},$$slots:{default:!0}});var j=e(ue,8);j.__click=C;var Ke=s(j);_(Ke,"src",La),n(),i(j);var D=e(j,2),de=s(D);oe(de);var be=e(de,2),ve=e(s(be));d(ve,{href:"https://github.com/cabin-language/vscode-cabin",children:(a,o)=>{n();var t=p("the Cabin Language Support extension");l(a,t)},$$slots:{default:!0}});var Xe=e(ve,2);d(Xe,{href:"https://marketplace.visualstudio.com/vscode",children:(a,o)=>{n();var t=p("the Visual Studio Code extension marketplace");l(a,t)},$$slots:{default:!0}}),n(),i(be),i(D);var A=e(D,2);A.__click=C;var ea=s(A);_(ea,"src",ja),n(),i(A);var z=e(A,2),ge=s(z);oe(ge);var me=e(ge,6);v(me,{children:(a,o)=>{n();var t=p("Plug 'cabin-language/vim-cabin'");l(a,t)},$$slots:{default:!0}});var aa=e(me,4);v(aa,{children:(a,o)=>{n();var t=p("Plugin 'cabin-language/vim-cabin'");l(a,t)},$$slots:{default:!0}}),i(z);var H=e(z,2);H.__click=C;var ta=s(H);_(ta,"src",Va),n(),i(H);var E=e(H,2),q=s(E),fe=e(s(q));d(fe,{href:"https://github.com/cabin-language/cabin.nvim",children:(a,o)=>{n();var t=p("cabin.nvim");l(a,t)},$$slots:{default:!0}});var _e=e(fe,2);d(_e,{href:"https://github.com/cabin-language/cabin/tree/main/crates/cabin-language-server",children:(a,o)=>{n();var t=p("cabin language server");l(a,t)},$$slots:{default:!0}});var ra=e(_e,2);d(ra,{href:"https://github.com/cabin-language/cabin/tree/main/crates/cabin-language-server",children:(a,o)=>{n();var t=p("cabin tree-sitter parser");l(a,t)},$$slots:{default:!0}}),n(),i(q);var ye=e(q,6);v(ye,{language:"lua",code:`
			{
				"cabin-language/cabin.nvim",
				dependencies = { "nvim-tree/nvim-web-devicons" }, -- optional
				opts = {}
			}
		`});var we=e(ye,4);v(we,{language:"lua",code:`
				MiniDeps.add({
					source = "cabin-language/cabin.nvim",
					depends = { "nvim-tree/nvim-web-devicons" }, -- optional
				})
			`});var B=e(we,2),oa=s(B);Pa(oa,{stroke:"#f9e2af",style:"width: 1.25rem;"}),n(),i(B);var $e=e(B,4),F=s($e),sa=e(s(F),2);d(sa,{href:"https://neovim.io/doc/user/filetype.html#_3.-docs-for-the-default-filetype-plugins.",children:(a,o)=>{n();var t=p("default filetype");l(a,t)},$$slots:{default:!0}}),i(F);var W=e(F,2),ia=e(s(W),2);d(ia,{href:"https://github.com/nvim-tree/nvim-web-devicons",children:(a,o)=>{n();var t=p("nvim-web-devicons");l(a,t)},$$slots:{default:!0}}),i(W);var J=e(W,2),xe=e(s(J),2);d(xe,{href:"https://github.com/cabin-language/cabin/tree/main/crates/cabin-language-server",children:(a,o)=>{n();var t=p("cabin language server");l(a,t)},$$slots:{default:!0}});var na=e(xe,2);d(na,{href:"https://github.com/williamboman/mason.nvim",children:(a,o)=>{n();var t=p("mason.nvim");l(a,t)},$$slots:{default:!0}}),i(J);var Ce=e(J,2),ke=e(s(Ce),2);d(ke,{href:"https://github.com/cabin-language/cabin/tree/main/crates/tree-sitter-cabin",children:(a,o)=>{n();var t=p("cabin tree-sitter parser");l(a,t)},$$slots:{default:!0}});var la=e(ke,2);d(la,{href:"https://github.com/nvim-tree-sitter/nvim-tree-sitter",children:(a,o)=>{n();var t=p("nvim-tree-sitter");l(a,t)},$$slots:{default:!0}}),i(Ce),i($e),i(E);var O=e(E,2);O.__click=C;var ca=s(O);_(ca,"src",Aa),n(),i(O);var Y=e(O,2),pa=s(Y);oe(pa),i(Y);var N=e(Y,2);N.__click=C;var ha=s(N);_(ha,"src",Ha),n(),i(N);var Z=e(N,2),Q=e(s(Z),12),ua=e(s(Q),2);r(ua,"margin-top","1rem"),i(Q);var da=e(Q,2);v(da,{children:(a,o)=>{var t=Da(),c=e(s(t),3);r(c,"color","#89b4fa");var h=e(c,2);r(h,"color","#9399b2");var u=e(h,4);r(u,"color","#9399b2"),r(u,"font-weight","bold"),n(),i(t),l(a,t)},$$slots:{default:!0}}),i(Z);var Pe=e(Z,8);v(Pe,{language:"bash",code:'(PATHS=(${PATH//:/ }) ; IFS=$\'\\n\' ; echo "${PATHS[*]}") | grep \\\\bcabin\\\\b || echo "Cabin is not in PATH!"'});var Te=e(Pe,2);Ue(Te,{children:(a,o)=>{n();var t=za(),c=e(X(t));d(c,{href:"https://www.gnu.org/software/coreutils/",color:"#11111b",children:(h,u)=>{n();var y=p("GNU Coreutils");l(h,y)},$$slots:{default:!0}}),n(),l(a,t)}});var Ie=e(Te,6);v(Ie,{language:"bash",code:'export PATH="$PATH:/home/user/.programs"'});var K=e(Ie,4),ba=e(s(K),5);r(ba,"color","cornflowerblue"),n(),i(K);var Se=e(K,4);v(Se,{copyable:!0,children:(a,o)=>{var t=Ea(),c=s(t);r(c,"color","#89b4fa");var h=e(c,2);r(h,"color","#89b4fa");var u=e(h,2);r(u,"color","#f38ba8"),i(t),l(a,t)},$$slots:{default:!0}});var Re=e(Se,4);v(Re,{copyable:!0,children:(a,o)=>{var t=qa(),c=s(t);r(c,"color","#89b4fa");var h=e(c,2);r(h,"color","#89b4fa");var u=e(h,2);r(u,"color","#f38ba8");var y=e(u,2);r(y,"color","#89b4fa");var R=e(y,2);r(R,"color","#f38ba8");var M=e(R,2);r(M,"color","#89b4fa");var L=e(M,2);r(L,"color","#89b4fa");var U=e(L,2);r(U,"color","#9399b2"),i(t),l(a,t)},$$slots:{default:!0}});var Me=e(Re,4),va=e(s(Me),3);d(va,{href:"https://github.com/cabin-language/cabin/issues",children:(a,o)=>{n();var t=p("submit an issue on the Cabin GitHub repository");l(a,t)},$$slots:{default:!0}}),n(5),i(Me),se(()=>{r(I,"background",w(x)==="windows"?"#28283d":"#181825"),r(S,"background",w(x)==="mac"?"#28283d":"#181825"),r(V,"background",w(x)==="linux"?"#28283d":"#181825")}),l(b,T)}}),fa()}ya(["click"]);export{st as component};
