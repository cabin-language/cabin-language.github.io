import"../chunks/CWj6FrbW.js";import"../chunks/69_IOA4Y.js";import{b as de,N as f,O as pe,P as se,a as ie,L as ue,Q as U,G as ae,K as W,R as fe,T as Y,h as N,U as ve,V as ge,F as me,W as xe,X as _e,Y as we,Z as be,d as Te,A as De,_ as ye,a0 as Ee,a1 as X,m as F,l as O,g as q,B as Se,k as Ie,n as ne,$ as Re,s as T,f as A,w as I,x as R,a2 as Le,t as K,a3 as ke}from"../chunks/DAmSNls5.js";import{s as Q}from"../chunks/DuBK3Vvv.js";import{i as G}from"../chunks/Y8OwWeHW.js";import{S as Z,h as z}from"../chunks/DIwq8TxL.js";import{e as V,a as y,f as Ae,t as M,c as J}from"../chunks/CNq40Ifi.js";import{h as Ne}from"../chunks/ijsLc-5c.js";import{a as Ce}from"../chunks/Do71zGnY.js";import{W as re}from"../chunks/Cybs9xu7.js";import{S as Pe}from"../chunks/BR-GWSDy.js";import{N as $e}from"../chunks/CiBA79j6.js";function j(o,t){return t}function qe(o,t,s,h){for(var v=[],p=t.length,c=0;c<p;c++)ge(t[c].e,v,!0);var m=p>0&&v.length===0&&s!==null;if(m){var u=s.parentNode;me(u),u.append(s),h.clear(),E(o,t[0].prev,t[p-1].next)}xe(v,()=>{for(var x=0;x<p;x++){var e=t[x];m||(h.delete(e.k),E(o,e.prev,e.next)),Te(e.e,!m)}})}function ee(o,t,s,h,v,p=null){var c=o,m={flags:t,items:new Map,first:null};N&&De();var u=null,x=!1,e=pe(()=>{var l=s();return ye(l)?l:l==null?[]:ae(l)});de(()=>{var l=f(e),i=l.length;if(x&&i===0)return;x=i===0;let r=!1;if(N){var n=c.data===Ee;n!==(i===0)&&(c=X(),F(c),O(!1),r=!0)}if(N){for(var _=null,w,a=0;a<i;a++){if(q.nodeType===8&&q.data===Se){c=q,r=!0,O(!1);break}var g=l[a],L=h(g,a);w=oe(q,m,_,null,g,L,a,v,t,s),m.items.set(L,w),_=w}i>0&&F(X())}N||Ge(l,m,c,v,t,h,s),p!==null&&(i===0?u?se(u):u=ie(()=>p(c)):u!==null&&ue(u,()=>{u=null})),r&&O(!0),f(e)}),N&&(c=q)}function Ge(o,t,s,h,v,p,c){var m=o.length,u=t.items,x=t.first,e=x,l,i=null,r=[],n=[],_,w,a,g;for(g=0;g<m;g+=1){if(_=o[g],w=p(_,g),a=u.get(w),a===void 0){var L=e?e.e.nodes_start:s;i=oe(L,t,i,i===null?t.first:i.next,_,w,g,h,v,c),u.set(w,i),r=[],n=[],e=i.next;continue}if(Me(a,_,g),(a.e.f&U)!==0&&se(a.e),a!==e){if(l!==void 0&&l.has(a)){if(r.length<n.length){var k=n[0],D;i=k.prev;var C=r[0],P=r[r.length-1];for(D=0;D<r.length;D+=1)te(r[D],k,s);for(D=0;D<n.length;D+=1)l.delete(n[D]);E(t,C.prev,P.next),E(t,i,C),E(t,P,k),e=k,i=P,g-=1,r=[],n=[]}else l.delete(a),te(a,e,s),E(t,a.prev,a.next),E(t,a,i===null?t.first:i.next),E(t,i,a),i=a;continue}for(r=[],n=[];e!==null&&e.k!==w;)(e.e.f&U)===0&&(l??(l=new Set)).add(e),n.push(e),e=e.next;if(e===null)continue;a=e}r.push(a),i=a,e=a.next}if(e!==null||l!==void 0){for(var S=l===void 0?[]:ae(l);e!==null;)(e.e.f&U)===0&&S.push(e),e=e.next;var H=S.length;if(H>0){var B=null;qe(t,S,B,u)}}W.first=t.first&&t.first.e,W.last=i&&i.e}function Me(o,t,s,h){ve(o.v,t),o.i=s}function oe(o,t,s,h,v,p,c,m,u,x){var e=(u&we)!==0,l=(u&be)===0,i=e?l?fe(v):Y(v):v,r=(u&_e)===0?c:Y(c),n={i:r,v:i,k:p,a:null,e:null,prev:s,next:h};try{return n.e=ie(()=>m(o,i,r,x),N),n.e.prev=s&&s.e,n.e.next=h&&h.e,s===null?t.first=n:(s.next=n,s.e.next=n.e),h!==null&&(h.prev=n,h.e.prev=n.e),n}finally{}}function te(o,t,s){for(var h=o.next?o.next.e.nodes_start:s,v=t?t.e.nodes_start:s,p=o.e.nodes_start;p!==h;){var c=Ie(p);v.before(p),p=c}}function E(o,t,s){t===null?o.first=s:(t.next=s,t.e.next=s&&s.e),s!==null&&(s.prev=t,s.e.prev=t&&t.e)}function He(o){$e(o,{Icon:re,type:"Preview",children:(t,s)=>{ne();var h=V("This is a preview feature and not yet available");y(t,h)}})}var Be=M("<h3>Example:</h3> <!>",1),Ue=M('<hr> <span class="svelte-3bpcoh"><!> <h2 class="svelte-3bpcoh"><code class="svelte-3bpcoh"> </code></h2> <button class="detail-button svelte-3bpcoh"><!></button></span> <!> <p><!></p> <!>',1),Oe=M('<hr> <h2 class="svelte-3bpcoh"><code class="svelte-3bpcoh"> </code></h2>',1),Ve=M(`<h1 id="text"><code class="svelte-3bpcoh">Text</code></h1> <p><code class="svelte-3bpcoh">Text</code> is Cabin's equivalent to <code class="svelte-3bpcoh">String</code> in most languages. It represents... well, text. <code class="svelte-3bpcoh">Text</code> is a group, but it's a special group that can't be instantiated with the standard <code class="svelte-3bpcoh">new</code> syntax; Instead, quoted text literals are used to instantiate it:</p> <!> <h2 id="properties">Properties</h2> <!> <hr> <h2 id="extensions">Extensions</h2> <!> <hr>`,1);function st(o){const t=ke([{signature:"bytes: action(this: This): Number",id:"bytes",shortDescription:"Gets the length of the string, in bytes.",longDescription:'Gets the length of the string, in bytes. To get the length of the string in graphemes, use <a href="#text-byte_count"><code>length()</code></a>.',example:`"hello!".length(); # 5
"üòÄüòòüòÅ".length(); # 6`,preview:!0,expanded:!1},{signature:"ends_with: action(this: This, pattern: This): Boolean",id:"ends_with",shortDescription:"Returns whether this text ends with the given suffix.",longDescription:"Returns whether this text ends with the givent suffix. If the given suffix is empty, this returns <code>true</code>, even if this text being checked is empty as well.",example:`"hello!".length(); # 5
"üòÄüòòüòÅ".length(); # 3`,preview:!0,expanded:!1},{signature:"length: action(this: This): Number",id:"length",shortDescription:"Gets the length of the string, in graphemes.",longDescription:'Gets the length of the string, in graphemes. Graphemes are what you can think of as a single "character", including regular ASCII characters, emojis, and other unicode characters; These all count as one unit in the length calculation. To get the length of the string in bytes, use <a href="#text-byte_count"><code>bytes()</code></a>.',example:`"hello!".length(); # 5
"üòÄüòòüòÅ".length(); # 3`,preview:!0,expanded:!1},{signature:"lines: action(this: This): List<This>",id:"lines",shortDescription:"Splits this text into lines.",longDescription:'Splits this text into lines. Equivalent to <code>text.split_where(["\\r", "\\n"])</code>',example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1},{signature:"replace: action(this: This, pattern: This, replacement: This): List<This>",id:"replace",shortDescription:"Replaces substrings with a given replacement.",longDescription:"Replaces all occurrences of <code>pattern</code> with <code>replacement</code>.",example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1},{signature:"split: action(this: This): List<This>",id:"split",shortDescription:"Splits this text by whitespace.",longDescription:"Splits this text by whitespace, returning the result as a list of substrings, without including the delimiters.",example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1},{signature:"split_any: action(this: This, delimiters: List<This>): List<This>",id:"split_any",shortDescription:"Splits this text by the given delimiters.",longDescription:"Splits this text by whitespace, returning the result as a list of substrings, without including the delimiters.",example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1},{signature:"starts_with: action(this: This, pattern: This): Boolean",id:"starts_with",shortDescription:"Returns whether this text starts with the given prefix.",longDescription:"Returns whether this text starts with the givent prefix. If the given prefix is empty, this returns <code>true</code>, even if this text being checked is empty as well.",example:`"hello!".length(); # 5
"üòÄüòòüòÅ".length(); # 3`,preview:!0,expanded:!1},{signature:"trim: action(this: This): This",id:"trim",shortDescription:"Removes whitespace from the beginning and end of this text.",longDescription:'Splits this text into lines. Equivalent to <code>text.split_where(["\\r", "\\n"])</code>',example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1},{signature:"trim_end: action(this: This): This",id:"trim_end",shortDescription:"Removes whitespace from the end of this text.",longDescription:'Removes all whitespace from the end of this text, as defined in <a href="https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt">the Unicode whitespace spec</a>. This includes spaces, tabs, newlines, carriage returns, and other unicode characters considered "whitespace". All such characters at the <i>end</i> of this text are removed.',example:'"  he was just 14    \\n\\r".trim_end(); # "  he was just 14"',preview:!0,expanded:!1},{signature:"trim_start: action(this: This): This",id:"trim_start",shortDescription:"Removes whitespace from the beginning of this text.",longDescription:'Splits this text into lines. Equivalent to <code>text.split_where(["\\r", "\\n"])</code>',example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1}]),s=[{signature:"extend Text tobe List<Letter>"},{signature:"extend Text tobe Addable"}];Ne(h=>{Re.title="Standard Library¬†¬†‚Ä¢¬†¬†Cabin Docs"}),Pe(o,{page:"Text",children:(h,v)=>{var p=Ve(),c=T(A(p),4);Z(c,{language:"cabin",code:`
			let text = "hello!"; # instance of Text
		`});var m=T(c,4);ee(m,1,()=>f(t),j,(x,e,l)=>{var i=Ue(),r=T(A(i),2),n=I(r);re(n,{stroke:"#f9e2af",style:"width: 1rem; height: 1rem;"});var _=T(n,2),w=I(_),a=I(w,!0);R(w),R(_);var g=T(_,2);g.__click=()=>(f(e).expanded=!f(e).expanded,Le(()=>f(t)));var L=I(g);{var k=d=>{var b=V("Less");y(d,b)},D=d=>{var b=V("More");y(d,b)};G(L,d=>{f(e).expanded?d(k):d(D,!1)})}R(g),R(r);var C=T(r,2);{var P=d=>{He(d)};G(C,d=>{f(e).expanded&&f(e).preview&&d(P)})}var S=T(C,2),H=I(S);{var B=d=>{var b=J(),$=A(b);z($,()=>f(e).longDescription),y(d,b)},le=d=>{var b=J(),$=A(b);z($,()=>f(e).shortDescription),y(d,b)};G(H,d=>{f(e).expanded?d(B):d(le,!1)})}R(S);var he=T(S,2);{var ce=d=>{var b=Be(),$=T(A(b),2);Z($,{language:"cabin",get code(){return f(e).example}}),y(d,b)};G(he,d=>{f(e).expanded&&d(ce)})}K(()=>{Ce(_,"id",f(e).id),Q(a,f(e).signature)}),y(x,i)});var u=T(m,6);ee(u,1,()=>s,j,(x,e)=>{var l=Oe(),i=T(A(l),2),r=I(i),n=I(r,!0);R(r),R(i),K(()=>Q(n,f(e).signature)),y(x,l)}),ne(2),y(h,p)}})}Ae(["click"]);export{st as component};
