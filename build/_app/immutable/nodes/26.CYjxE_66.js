import"../chunks/CWj6FrbW.js";import"../chunks/69_IOA4Y.js";import{b as he,O as f,a5 as ce,a1 as se,a as ae,G as de,aj as W,C as ie,F as U,a9 as pe,T as F,h as C,ak as ue,al as fe,B as ve,am as ge,an as me,ao as xe,ap as _e,d as be,x as we,Z as Te,_ as De,a0 as V,l as Y,k as O,e as M,y as ye,j as Ee,$ as Se,s as T,f as A,L as I,P as R,aq as Ie,t as X,ar as Re,n as ke}from"../chunks/CoInYexW.js";import{s as Z}from"../chunks/Dbgt_8rM.js";import{i as H}from"../chunks/B6cD6w6y.js";import{S as z,h as J}from"../chunks/DOGuWRaC.js";import{t as P,a as y,f as Le,e as K,c as Q}from"../chunks/CZgyuwJY.js";import{h as Ae}from"../chunks/eUedGi1i.js";import{a as Ce}from"../chunks/D9axuTUD.js";import{W as Ne}from"../chunks/OJNjofVz.js";import{S as qe}from"../chunks/DZdIHzvT.js";function j(l,t){return t}function Ge(l,t,s,d){for(var v=[],p=t.length,h=0;h<p;h++)fe(t[h].e,v,!0);var m=p>0&&v.length===0&&s!==null;if(m){var u=s.parentNode;ve(u),u.append(s),d.clear(),E(l,t[0].prev,t[p-1].next)}ge(v,()=>{for(var x=0;x<p;x++){var e=t[x];m||(d.delete(e.k),E(l,e.prev,e.next)),be(e.e,!m)}})}function ee(l,t,s,d,v,p=null){var h=l,m={flags:t,items:new Map,first:null};C&&we();var u=null,x=!1,e=ce(()=>{var o=s();return Te(o)?o:o==null?[]:ie(o)});he(()=>{var o=f(e),a=o.length;if(x&&a===0)return;x=a===0;let r=!1;if(C){var n=h.data===De;n!==(a===0)&&(h=V(),Y(h),O(!1),r=!0)}if(C){for(var _=null,b,i=0;i<a;i++){if(M.nodeType===8&&M.data===ye){h=M,r=!0,O(!1);break}var g=o[i],k=d(g,i);b=ne(M,m,_,null,g,k,i,v,t,s),m.items.set(k,b),_=b}a>0&&Y(V())}C||Me(o,m,h,v,t,d,s),p!==null&&(a===0?u?se(u):u=ae(()=>p(h)):u!==null&&de(u,()=>{u=null})),r&&O(!0),f(e)}),C&&(h=M)}function Me(l,t,s,d,v,p,h){var m=l.length,u=t.items,x=t.first,e=x,o,a=null,r=[],n=[],_,b,i,g;for(g=0;g<m;g+=1){if(_=l[g],b=p(_,g),i=u.get(b),i===void 0){var k=e?e.e.nodes_start:s;a=ne(k,t,a,a===null?t.first:a.next,_,b,g,d,v,h),u.set(b,a),r=[],n=[],e=a.next;continue}if(Pe(i,_,g),(i.e.f&W)!==0&&se(i.e),i!==e){if(o!==void 0&&o.has(i)){if(r.length<n.length){var L=n[0],D;a=L.prev;var N=r[0],q=r[r.length-1];for(D=0;D<r.length;D+=1)te(r[D],L,s);for(D=0;D<n.length;D+=1)o.delete(n[D]);E(t,N.prev,q.next),E(t,a,N),E(t,q,L),e=L,a=q,g-=1,r=[],n=[]}else o.delete(i),te(i,e,s),E(t,i.prev,i.next),E(t,i,a===null?t.first:a.next),E(t,a,i),a=i;continue}for(r=[],n=[];e!==null&&e.k!==b;)(e.e.f&W)===0&&(o??(o=new Set)).add(e),n.push(e),e=e.next;if(e===null)continue;i=e}r.push(i),a=i,e=i.next}if(e!==null||o!==void 0){for(var S=o===void 0?[]:ie(o);e!==null;)(e.e.f&W)===0&&S.push(e),e=e.next;var $=S.length;if($>0){var B=null;Ge(t,S,B,u)}}U.first=t.first&&t.first.e,U.last=a&&a.e}function Pe(l,t,s,d){ue(l.v,t),l.i=s}function ne(l,t,s,d,v,p,h,m,u,x){var e=(u&xe)!==0,o=(u&_e)===0,a=e?o?pe(v):F(v):v,r=(u&me)===0?h:F(h),n={i:r,v:a,k:p,a:null,e:null,prev:s,next:d};try{return n.e=ae(()=>m(l,a,r,x),C),n.e.prev=s&&s.e,n.e.next=d&&d.e,s===null?t.first=n:(s.next=n,s.e.next=n.e),d!==null&&(d.prev=n,d.e.prev=n.e),n}finally{}}function te(l,t,s){for(var d=l.next?l.next.e.nodes_start:s,v=t?t.e.nodes_start:s,p=l.e.nodes_start;p!==d;){var h=Ee(p);v.before(p),p=h}}function E(l,t,s){t===null?l.first=s:(t.next=s,t.e.next=s&&s.e),s!==null&&(s.prev=t,s.e.prev=t&&t.e)}var He=P('<p class="svelte-1ci1e74"><b>Warning:</b> This is a preview feature and not yet available</p>');function $e(l){var t=He();y(l,t)}var Be=P("<h3>Example:</h3> <!>",1),We=P('<hr> <span class="svelte-3bpcoh"><!> <h2 class="svelte-3bpcoh"><code class="svelte-3bpcoh"> </code></h2> <button class="detail-button svelte-3bpcoh"><!></button></span> <!> <p><!></p> <!>',1),Oe=P('<hr> <h2 class="svelte-3bpcoh"><code class="svelte-3bpcoh"> </code></h2>',1),Ue=P(`<h1 id="text"><code class="svelte-3bpcoh">Text</code></h1> <p><code class="svelte-3bpcoh">Text</code> is Cabin's equivalent to <code class="svelte-3bpcoh">String</code> in most languages. It represents... well, text. <code class="svelte-3bpcoh">Text</code> is a group, but it's a special group that can't be instantiated with the standard <code class="svelte-3bpcoh">new</code> syntax; Instead, quoted text literals are used to instantiate it:</p> <!> <h2 id="properties">Properties</h2> <!> <hr> <h2 id="extensions">Extensions</h2> <!> <hr>`,1);function tt(l){const t=Re([{signature:"bytes: action(this: This): Number",id:"bytes",shortDescription:"Gets the length of the string, in bytes.",longDescription:'Gets the length of the string, in bytes. To get the length of the string in graphemes, use <a href="#text-byte_count"><code>length()</code></a>.',example:`"hello!".length(); # 5
"üòÄüòòüòÅ".length(); # 6`,preview:!0,expanded:!1},{signature:"ends_with: action(this: This, pattern: This): Boolean",id:"ends_with",shortDescription:"Returns whether this text ends with the given suffix.",longDescription:"Returns whether this text ends with the givent suffix. If the given suffix is empty, this returns <code>true</code>, even if this text being checked is empty as well.",example:`"hello!".length(); # 5
"üòÄüòòüòÅ".length(); # 3`,preview:!0,expanded:!1},{signature:"length: action(this: This): Number",id:"length",shortDescription:"Gets the length of the string, in graphemes.",longDescription:'Gets the length of the string, in graphemes. Graphemes are what you can think of as a single "character", including regular ASCII characters, emojis, and other unicode characters; These all count as one unit in the length calculation. To get the length of the string in bytes, use <a href="#text-byte_count"><code>bytes()</code></a>.',example:`"hello!".length(); # 5
"üòÄüòòüòÅ".length(); # 3`,preview:!0,expanded:!1},{signature:"lines: action(this: This): List<This>",id:"lines",shortDescription:"Splits this text into lines.",longDescription:'Splits this text into lines. Equivalent to <code>text.split_where(["\\r", "\\n"])</code>',example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1},{signature:"replace: action(this: This, pattern: This, replacement: This): List<This>",id:"replace",shortDescription:"Replaces substrings with a given replacement.",longDescription:"Replaces all occurrences of <code>pattern</code> with <code>replacement</code>.",example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1},{signature:"split: action(this: This): List<This>",id:"split",shortDescription:"Splits this text by whitespace.",longDescription:"Splits this text by whitespace, returning the result as a list of substrings, without including the delimiters.",example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1},{signature:"split_any: action(this: This, delimiters: List<This>): List<This>",id:"split_any",shortDescription:"Splits this text by the given delimiters.",longDescription:"Splits this text by whitespace, returning the result as a list of substrings, without including the delimiters.",example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1},{signature:"starts_with: action(this: This, pattern: This): Boolean",id:"starts_with",shortDescription:"Returns whether this text starts with the given prefix.",longDescription:"Returns whether this text starts with the givent prefix. If the given prefix is empty, this returns <code>true</code>, even if this text being checked is empty as well.",example:`"hello!".length(); # 5
"üòÄüòòüòÅ".length(); # 3`,preview:!0,expanded:!1},{signature:"trim: action(this: This): This",id:"trim",shortDescription:"Removes whitespace from the beginning and end of this text.",longDescription:'Splits this text into lines. Equivalent to <code>text.split_where(["\\r", "\\n"])</code>',example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1},{signature:"trim_end: action(this: This): This",id:"trim_end",shortDescription:"Removes whitespace from the end of this text.",longDescription:'Removes all whitespace from the end of this text, as defined in <a href="https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt">the Unicode whitespace spec</a>. This includes spaces, tabs, newlines, carriage returns, and other unicode characters considered "whitespace". All such characters at the <i>end</i> of this text are removed.',example:'"  he was just 14    \\n\\r".trim_end(); # "  he was just 14"',preview:!0,expanded:!1},{signature:"trim_start: action(this: This): This",id:"trim_start",shortDescription:"Removes whitespace from the beginning of this text.",longDescription:'Splits this text into lines. Equivalent to <code>text.split_where(["\\r", "\\n"])</code>',example:'"hes a    phantom".split(); # ["hes", "a", "phantom"]',preview:!0,expanded:!1}]),s=[{signature:"extend Text tobe List<Letter>"},{signature:"extend Text tobe Addable"}];Ae(d=>{Se.title="Standard Library¬†¬†‚Ä¢¬†¬†Cabin Docs"}),qe(l,{page:"Text",children:(d,v)=>{var p=Ue(),h=T(A(p),4);z(h,{language:"cabin",code:`
			let text = "hello!"; # instance of Text
		`});var m=T(h,4);ee(m,1,()=>f(t),j,(x,e,o)=>{var a=We(),r=T(A(a),2),n=I(r);Ne(n,{stroke:"#f9e2af",style:"width: 1rem; height: 1rem;"});var _=T(n,2),b=I(_),i=I(b,!0);R(b),R(_);var g=T(_,2);g.__click=()=>(f(e).expanded=!f(e).expanded,Ie(()=>f(t)));var k=I(g);{var L=c=>{var w=K("Less");y(c,w)},D=c=>{var w=K("More");y(c,w)};H(k,c=>{f(e).expanded?c(L):c(D,!1)})}R(g),R(r);var N=T(r,2);{var q=c=>{$e(c)};H(N,c=>{f(e).expanded&&f(e).preview&&c(q)})}var S=T(N,2),$=I(S);{var B=c=>{var w=Q(),G=A(w);J(G,()=>f(e).longDescription),y(c,w)},re=c=>{var w=Q(),G=A(w);J(G,()=>f(e).shortDescription),y(c,w)};H($,c=>{f(e).expanded?c(B):c(re,!1)})}R(S);var le=T(S,2);{var oe=c=>{var w=Be(),G=T(A(w),2);z(G,{language:"cabin",get code(){return f(e).example}}),y(c,w)};H(le,c=>{f(e).expanded&&c(oe)})}X(()=>{Ce(_,"id",f(e).id),Z(i,f(e).signature)}),y(x,a)});var u=T(m,6);ee(u,1,()=>s,j,(x,e)=>{var o=Oe(),a=T(A(o),2),r=I(a),n=I(r,!0);R(r),R(a),X(()=>Z(n,f(e).signature)),y(x,o)}),ke(2),y(d,p)}})}Le(["click"]);export{tt as component};
